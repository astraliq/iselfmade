<?php


namespace frontend\controllers;


use common\base\BaseController;
use frontend\controllers\actions\site\ErrorAction;
use frontend\controllers\actions\task\ArchiveAction;
use frontend\controllers\actions\task\BoardAction;
use frontend\controllers\actions\task\CreateAction;
use frontend\controllers\actions\task\DeleteAction;
use frontend\controllers\actions\task\FinishAction;
use frontend\controllers\actions\task\FuruteAction;
use frontend\controllers\actions\task\GetArchiveAction;
use frontend\controllers\actions\task\GetMonthsArchiveDataAction;
use frontend\controllers\actions\task\GoalsAction;
use frontend\controllers\actions\task\GroupAction;
use frontend\controllers\actions\task\NextRepeatDateAction;
use frontend\controllers\actions\task\PossibleAction;
use frontend\controllers\actions\task\PromisesAction;
use frontend\controllers\actions\task\RepeatedAction;
use frontend\controllers\actions\task\SetGradeAction;
use frontend\controllers\actions\task\TransferAction;
use frontend\controllers\actions\task\UpdateAllAction;
use frontend\controllers\actions\task\ViewAction;
use frontend\controllers\actions\task\ViewAllTasks;
use frontend\controllers\actions\task\WelcomeAction;
use yii\web\HttpException;


class TaskController extends BaseController {

    public $layout = 'base';


    public function actions() {

        return [
            'create'=>['class'=>CreateAction::class, 'view' => 'create'],
            'change' => ['class' =>CreateAction::class, 'view' => 'create'],
            'transfer'=>['class'=>TransferAction::class],
            'view' => ['class' =>ViewAction::class],
            'report' => ['class' =>ViewAllTasks::class],
            'del' => ['class' =>DeleteAction::class],
            'restore' => ['class' =>DeleteAction::class],
            'hard-del' => ['class' =>DeleteAction::class],
            'finish' => ['class' =>FinishAction::class],
            'update-all' => ['class' =>UpdateAllAction::class],
            'error' => ['class' => ErrorAction::class],
            'repeated' => ['class' => RepeatedAction::class],
            'next-repeat-date' => ['class' => NextRepeatDateAction::class],
            'archive' => ['class' => ArchiveAction::class],
            'get-archive' => ['class' => GetArchiveAction::class],
            'set-grade' => ['class' => SetGradeAction::class],
            'get-months-archive-data' => ['class' => GetMonthsArchiveDataAction::class],
            'welcome' => ['class' => WelcomeAction::class],
            'goals' => ['class' => GoalsAction::class],
            'future' => ['class' => FuruteAction::class],
            'possible' => ['class' => PossibleAction::class],
            'promises' => ['class' => PromisesAction::class],
            'group' => ['class' => GroupAction::class],
            'board' => ['class' => BoardAction::class],
        ];

    }

    public function beforeAction($action) {

        if(!parent::beforeAction($action) ){
            return false;
        }

        if (\Yii::$app->user->isGuest) {
            $this->redirect('/');
            return false;
        }

        if (!\Yii::$app->rbac->canViewOwnTask()) {
            throw new HttpException(403, 'Нет доступа' );
        }

//        if (in_array($action->id, ['index'])) {
//            $this->enableCsrfValidation = false;
//        }

        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }


}