<?php


namespace app\components;


use app\base\BaseComponent;
use app\models\User;
use yii\web\Cookie;
use yii\web\UploadedFile;

class UserComponent extends BaseComponent {
    public $modelClass;

    public function init() {
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function getModel() {
        return new $this->modelClass;
    }

    public function updateUser(User $user):bool {
        $user->avaReal = UploadedFile::getInstance($user, 'avaReal');
        $fileSaver = \Yii::createObject(['class' => FileSaverComponent::class]);

//                echo '<pre>';
//                print_r($user);
//                echo '</pre>';
//                exit();
        if ($user->validate()) {
            if ($user->avaReal) {
                $file = $fileSaver->saveAvatar($user->avaReal);
                if (!$file) {
                    return false;
                }
                $user->avatar = $file;
            }

            // валидация + сохранение активности
            if ($user->save(false)) {
                return true;
            }

            \Yii::error($user->getErrors());
            return false;
        }

        //валидация файлов не прошла
        return false;
    }

    public function checkConfirmationEmail():bool {
        $user = \Yii::$app->user->getIdentity();
        if ($user->confirm_email != 1) {
            // получаем куки от клиента
            $reqCookie = \Yii::$app->request->cookies;
            // куки для отдачи клиенту
            $resCookie = \Yii::$app->response->cookies;
            $confirmEmailCookie = $reqCookie->getValue('conf_email_cookie', '0');
            if ($confirmEmailCookie == '0') {
                $resCookie->add(new Cookie([
                    'name' => 'conf_email_cookie',
                    'value' => 1,
                    'expire' => time() + 86400,
                ]));
                return true;
            }
            return false;
        }
        return false;
    }


}