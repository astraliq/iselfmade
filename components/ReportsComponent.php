<?php


namespace app\components;


use app\models\UsersReports;
use yii\base\Component;
use yii\db\Expression;

class ReportsComponent extends Component {
    public $modelClass;

    public function init() {
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function getModel() {
        return new $this->modelClass;
    }

    public function getFirstUserReport() {
        $todayUTC = date('Y-m-d');
        $report = UsersReports::find()
            ->andWhere(['OR',
                ['IS', 'status', null],
                ['=', 'status', 1],
            ])
            ->orderBy([
                'views' => SORT_ASC,
                'date' => SORT_ASC,
            ])
            ->one();

        if (!$report) {
            $report = UsersReports::find()
                ->where([
                'status' => 2,
            ])
                ->orderBy([
                    'views' => SORT_ASC,
                    'date' => SORT_ASC,
                ])
                ->one();
        }
        if (!$report) {
            $report = UsersReports::find()
                ->where([
                'status' => 3,
            ])
                ->orderBy([
                    'views' => SORT_ASC,
                    'date' => SORT_ASC,
                ])
                ->one();
        }
        if ($report) {
            if (!$report->views) {
                $report->views = 1;
            } else {
                $report->views = ++$report->views;
            }
            $report->save();
        }

        return $report;
    }

    public function getNextUserReport() {
        $todayUTC = date('Y-m-d');
        $report = UsersReports::find()
//            ->where([
//                'date' => $todayUTC,
//                'status' => null,
//            ])
            ->andWhere(['OR',
                ['IS', 'status', null],
                ['<', 'status', 4],
            ])
            ->orderBy(['date' => SORT_ASC])
            ->one();
        return $report;
    }

    public function getCountReportsToCheck() {
        $todayUTC = date('Y-m-d');
        $reportsCount = UsersReports::find()
//            ->where([
//                'date' => $todayUTC,
//                'status' => null,
//            ])
            ->andWhere(['OR',
                ['IS', 'status', null],
                ['<', 'status', 4],
            ])
            ->count();
        return $reportsCount;
    }

    public function changeReportStatus($userId, $date, $status) {
        $d = \DateTime::createFromFormat('d.m.Y', $date)->format('Y-m-d');

        $this->modelClass = UsersReports::class;
        $model = $this->getModel();
        $report = $model->findOne(['user_id' => $userId, 'date' => $d]);
        $report->status = $status;
        if ($report->save()) {
            return true;
        }
        return false;
    }

}